id: nz.mega.MEGAsync
sdk: org.kde.Sdk
runtime: org.kde.Platform
runtime-version: 5.15-23.08
finish-args:
  - --device=dri
  # The user should use flatseal to grant these permissions 
  #- --filesystem=~/MEGA:create
  #- --filesystem=~/MEGAsync Downloads:create
  #- --filesystem=~/MEGAsync:create
  #- --own-name=org.kde.*
  - --share=ipc
  - --share=network
  - --socket=pulseaudio
  - --socket=wayland
  - --socket=x11
  - --talk-name=org.freedesktop.Notifications
  - --talk-name=org.kde.StatusNotifierWatcher
command: megasync
rename-icon: mega
copy-icon: true
rename-desktop-file: megasync.desktop
cleanup:
  - '*.a'
  - '*.la'
  - /include
  - /lib/cmake
  - /lib/pkgconfig
  - /share/doc
  - /share/man
modules:

  - name: MEGAsync
    buildsystem: simple
    subdir: src
    build-options:
      env:
        DESKTOP_DESTDIR: /app
    build-commands:
      - |
        set -e
        sed -i \
          's|QFileDialog::DontUseNativeDialog, false|QFileDialog::DontUseNativeDialog, true|' \
          MEGASync/{gui/MultiQFileDialog,MegaApplication}.cpp
      - |
        set -e
        cd MEGASync/mega
        ./autogen.sh
        ./configure \
          --prefix=/app
      - >-
        qmake
        PREFIX=/app
        QMAKE_LIBDIR=/app/lib
        CONFIG+=FULLREQUIREMENTS
        MEGA.pro
      - lrelease MEGASync/MEGASync.pro
      - make -j${FLATPAK_BUILDER_N_JOBS}
      - make install
      - install -D MEGASync/megasync -t /app/bin/
    post-install:
      # Automatically add build version and date into AppData
      - |
        set -e
        VERSION=$(git describe --tags | sed -e 's/^[vV]//' -e 's/_Linux$//')
        DATE=$(date -d @$(git show -s --format=%ct) +'%Y-%m-%d')
        sed \
          -e "s/@VERSION@/${VERSION}/g" \
          -e "s/@DATE@/${DATE}/g" \
          -i /app/share/metainfo/${FLATPAK_ID}.metainfo.xml
    sources:
      - type: git
        url: https://github.com/meganz/MEGAsync.git
        tag:  v4.12.2.0_OSX
        commit: e250aff55c2a6d09bc1dcb9a8f2b3f1bacdfc1f3
        x-checker-data:
          type: json
          url: https://api.github.com/repos/meganz/MEGAsync/releases
          tag-query: map(select(.tag_name | endswith("_Linux"))) | first | .tag_name
          version-query: $tag | sub("^v"; "") | sub("_Linux$"; "")
          timestamp-query: map(select(.tag_name==$tag)) | first | .published_at
          is-main-source: true
      - type: shell
        dest: src/MEGASync
        commands:
          - sed -i 's/lessThan(GCC_VERSION, 5)/greaterThan(GCC_VERSION, 5)/' MEGASync.pro
          - sed -i '/DEFINES += REQUIRE_HAVE_PDFIUM/d' MEGASync.pro
      # https://github.com/meganz/MEGAsync/pull/510
      - type: patch
        path: patches/0001-feat-add-AppData-manifest.patch
      - type: patch
        path: patches/0001-freeimage-cap-truncated.patch
      - type: patch
        path: patches/aarch64-port-MegaSync.diff
      - type: patch
        path: patches/aarch64-port-mega.diff
    modules:

      - name: cryptopp
        no-autogen: true
        make-args:
          - shared
        install-rule: install-lib
        make-install-args:
          - PREFIX=/app
          - LIBDIR=/app/lib
        build-options:
          # Generally speaking, you should not use Link Time Optimization for
          # Crypto++. There are three reasons for the recommendation. First, we
          # don't want the linker changing object files or the executables
          # produced during link. The linker's job is to combine object files,
          # not attempt to peephole optimize them.
          # https://www.cryptopp.com/wiki/Link_Time_Optimization
          cflags: -fno-lto
          cxxflags: -fno-lto
        sources:
          - type: git
            url: https://github.com/weidai11/cryptopp.git
            tag: CRYPTOPP_8_9_0
            commit: 843d74c7c97f9e19a615b8ff3c0ca06599ca501b
            x-checker-data:
              type: json
              url: https://api.github.com/repos/weidai11/cryptopp/releases/latest
              tag-query: .tag_name
              version-query: .tag_name
              timestamp-query: .published_at
        cleanup:
          - /bin
          - /share

      - name: c-ares
        buildsystem: cmake-ninja
        sources:
          - type: archive
            url: https://c-ares.haxx.se/download/c-ares-1.24.0.tar.gz
            sha256: c517de6d5ac9cd55a9b72c1541c3e25b84588421817b5f092850ac09a8df5103
            x-checker-data:
              type: html
              url: https://c-ares.haxx.se/download/
              pattern: (c-ares-(\d\.\d+\.?\d*).tar.gz)
        cleanup:
          - /bin

      - name: freeimage
        subdir: FreeImage/tags/3.18.0
        no-autogen: true
        build-options:
          arch:
            aarch64:
              cflags: -fPIC -DPNG_ARM_NEON_OPT=0
              cxxflags: -fPIC -std=c++11 -DPNG_ARM_NEON_OPT=0
            x86_64:
              cxxflags: -std=c++11
        make-install-args:
          - DESTDIR=/app
          - INCDIR=/app/include
          - INSTALLDIR=/app/lib
        sources:
          - type: svn
            url: https://svn.code.sf.net/p/freeimage/svn/
            revision: r1903
          - type: patch
            path: patches/freeimage-makefile-install.patch

      - name: libsodium
        sources:
          - type: git
            url: https://github.com/jedisct1/libsodium.git
            tag: 1.0.19-RELEASE
            commit: fb4533b0a941b3a5b1db5687d1b008a5853d1f29
            x-checker-data:
              type: json
              url: https://api.github.com/repos/jedisct1/libsodium/releases/latest
              tag-query: .tag_name
              version-query: .tag_name
              timestamp-query: .published_at

      - name: libmediainfo
        buildsystem: cmake-ninja
        subdir: Project/CMake
        builddir: true
        sources:
          - type: archive
            url: http://mediaarea.net/download/source/libmediainfo/23.11/libmediainfo_23.11.tar.xz
            sha256: 197e54fcc79e3c0d5df44a8f58dc4e018bc2f85d13fa3bed54af3dc56d5e853d
        modules:

          - name: libzen
            buildsystem: cmake-ninja
            subdir: Project/CMake
            builddir: true
            sources:
              - type: archive
                url: https://mediaarea.net/download/source/libzen/0.4.41/libzen_0.4.41.tar.xz
                sha256: 933bad3b7ecd29dc6bdc88a83645c83dfd098c15b0b90d6177a37fa1536704e8

      - name: libuv
        sources:
          - type: archive
            url: https://dist.libuv.org/dist/v1.47.0/libuv-v1.47.0.tar.gz
            sha256: 20c37a4ca77a2107879473c6c8fa0dc1350e80045df98bfbe78f7cd6d7dd2965

      - name: LibRaw
        config-opts:
          - --disable-examples
          - --disable-static
        sources:
          - type: archive
            url: https://www.libraw.org/data/LibRaw-0.21.1.tar.gz
            sha256: 630a6bcf5e65d1b1b40cdb8608bdb922316759bfb981c65091fec8682d1543cd
        cleanup:
          - /bin

  - name: xrdb
    sources:
      - type: archive
        url: https://www.x.org/releases/individual/app/xrdb-1.2.2.tar.gz
        sha256: db2d774a35ae2f7e7ac61cc2de0dcae27fc2aa14399c35721f8300e63ea73549
        x-checker-data:
          type: html
          url: https://www.x.org/releases/individual/app/
          pattern: (xrdb-(\d\.\d+\.?\d*).tar.gz)
    modules:

      - name: libXmu
        sources:
          - type: archive
            url: https://www.x.org/releases/individual/lib/libXmu-1.1.4.tar.gz
            sha256: 3091d711cdc1d8ea0f545a13b90d1464c3c3ab64778fd121f0d789b277a80289
            x-checker-data:
              type: html
              url: https://www.x.org/releases/individual/lib/
              pattern: (libXmu-(\d\.\d+\.?\d*).tar.gz)
