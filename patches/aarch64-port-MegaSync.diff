diff --git a/src/MEGASync/CMakeLists.txt b/src/MEGASync/CMakeLists.txt
index bba820eea..bf859f263 100644
--- a/src/MEGASync/CMakeLists.txt
+++ b/src/MEGASync/CMakeLists.txt
@@ -59,6 +59,8 @@ elseif (APPLE)
     )
 endif()
 
+include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
+
 target_sources(MEGAsync
     PRIVATE
     ${MEGA_DESKTOP_APP_HEADERS}
@@ -83,12 +85,12 @@ qt5_create_translation(QM_OUTPUT ${CMAKE_CURRENT_SOURCE_DIR} gui/translations/tr
 add_custom_target(generate_ts DEPENDS ${QM_OUTPUT})
 add_dependencies(MEGAsync generate_ts)
 
-target_include_directories(MEGAsync PRIVATE ${CMAKE_CURRENT_LIST_DIR}
-    ${CMAKE_CURRENT_LIST_DIR}/google_breakpad
-)
+#target_include_directories(MEGAsync PRIVATE ${CMAKE_CURRENT_LIST_DIR}
+#    ${CMAKE_CURRENT_LIST_DIR}/google_breakpad
+#)
 
 # Include modules in subdirectories with sources for Desktop App
-add_subdirectory(google_breakpad)
+#add_subdirectory(google_breakpad)
 
 include(control/control.cmake)
 include(gui/gui.cmake)
@@ -100,6 +102,7 @@ include(syncs/syncs.cmake)
 include(transfers/transfers.cmake)
 include(UserAttributesRequests/userattributesrequests.cmake)
 
+
 target_compile_definitions(MEGAsync
     PUBLIC
     QT_NO_CAST_FROM_ASCII QT_NO_CAST_TO_ASCII
@@ -132,7 +135,7 @@ target_link_libraries(MEGAsync
     Qt5::Qml
     Qt5::Quick
     Qt5::QuickWidgets
-    MEGA::google_breakpad
+    #MEGA::google_breakpad
 )
 
 # Install MEGAsync binary, dynamic libraries and, if needed, deploy Qt dependencies.
diff --git a/src/MEGASync/MegaApplication.cpp b/src/MEGASync/MegaApplication.cpp
index af1a99138..ed1131675 100644
--- a/src/MEGASync/MegaApplication.cpp
+++ b/src/MEGASync/MegaApplication.cpp
@@ -4,7 +4,7 @@
 #include "Avatar.h"
 #include "ChangeLogDialog.h"
 #include "CommonMessages.h"
-#include "CrashHandler.h"
+//#include "CrashHandler.h"
 #include "CrashReportDialog.h"
 #include "DateTimeFormatter.h"
 #include "DialogOpener.h"
@@ -603,6 +603,7 @@ void MegaApplication::initialize()
     if (preferences->isCrashed())
     {
         preferences->setCrashed(false);
+        /*
         QStringList reports = CrashHandler::instance()->getPendingCrashReports();
         if (reports.size())
         {
@@ -646,6 +647,7 @@ void MegaApplication::initialize()
 #endif
             }
         }
+        */
     }
 
     mTransferQuota = std::make_shared<TransferQuota>(mOsNotifications);
@@ -2200,7 +2202,7 @@ void MegaApplication::cleanAll()
     appfinished = true;
 
 #ifndef DEBUG
-    CrashHandler::instance()->Disable();
+    //CrashHandler::instance()->Disable();
 #endif
 
     qInstallMessageHandler(0);
diff --git a/src/MEGASync/control/control.cmake b/src/MEGASync/control/control.cmake
index 8d6792428..89facb674 100644
--- a/src/MEGASync/control/control.cmake
+++ b/src/MEGASync/control/control.cmake
@@ -4,7 +4,7 @@ set(DESKTOP_APP_CONTROL_HEADERS
     ${CMAKE_CURRENT_LIST_DIR}/AppStatsEvents.h
     ${CMAKE_CURRENT_LIST_DIR}/AsyncHandler.h
     ${CMAKE_CURRENT_LIST_DIR}/ConnectivityChecker.h
-    ${CMAKE_CURRENT_LIST_DIR}/CrashHandler.h
+    #${CMAKE_CURRENT_LIST_DIR}/CrashHandler.h
     ${CMAKE_CURRENT_LIST_DIR}/DialogOpener.h
     ${CMAKE_CURRENT_LIST_DIR}/DownloadQueueController.h
     ${CMAKE_CURRENT_LIST_DIR}/EmailRequester.h
@@ -57,7 +57,7 @@ set(DESKTOP_APP_CONTROL_SOURCES
     ${CMAKE_CURRENT_LIST_DIR}/AppState.cpp
     ${CMAKE_CURRENT_LIST_DIR}/AppStatsEvents.cpp
     ${CMAKE_CURRENT_LIST_DIR}/ConnectivityChecker.cpp
-    ${CMAKE_CURRENT_LIST_DIR}/CrashHandler.cpp
+    #${CMAKE_CURRENT_LIST_DIR}/CrashHandler.cpp
     ${CMAKE_CURRENT_LIST_DIR}/DialogOpener.cpp
     ${CMAKE_CURRENT_LIST_DIR}/DownloadQueueController.cpp
     ${CMAKE_CURRENT_LIST_DIR}/EmailRequester.cpp
diff --git a/src/MEGASync/main.cpp b/src/MEGASync/main.cpp
index 6832501a4..cd03e9d52 100644
--- a/src/MEGASync/main.cpp
+++ b/src/MEGASync/main.cpp
@@ -1,5 +1,5 @@
 #ifndef DEBUG
-#include "CrashHandler.h"
+//#include "CrashHandler.h"
 #endif
 
 #include "MegaApplication.h"
@@ -550,7 +550,7 @@ int main(int argc, char *argv[])
     }
 
 #ifndef DEBUG
-    CrashHandler::instance()->Init(QDir::toNativeSeparators(crashPath));
+    //CrashHandler::instance()->Init(QDir::toNativeSeparators(crashPath));
 #endif
 
     QtLockedFile singleInstanceChecker(appLockPath);
diff --git a/src/MEGAUpdateGenerator/CMakeLists.txt b/src/MEGAUpdateGenerator/CMakeLists.txt
index ce4747fce..45f0a0a91 100644
--- a/src/MEGAUpdateGenerator/CMakeLists.txt
+++ b/src/MEGAUpdateGenerator/CMakeLists.txt
@@ -15,10 +15,11 @@ target_sources(MEGAUpdateGenerator
 )
 
 # Load and link needed libraries for the CHATlib target
-find_package(cryptopp CONFIG REQUIRED)
+add_library (cryptopp SHARED IMPORTED)
+set_target_properties(cryptopp PROPERTIES IMPORTED_LOCATION /app/lib/libcryptopp.so)
 target_link_libraries(MEGAUpdateGenerator
     PRIVATE
-    cryptopp::cryptopp
+    cryptopp
     MEGA::SDKlib
 )
 
diff --git a/cmake/modules/get_clang_format.cmake b/cmake/modules/get_clang_format.cmake
index 69b43d5..9ad26a4 100644
--- a/cmake/modules/get_clang_format.cmake
+++ b/cmake/modules/get_clang_format.cmake
@@ -1,14 +1,2 @@
 function(get_clang_format)
-    message(STATUS "Downloading .clang-format")
-
-    set(FILE_URL "https://raw.githubusercontent.com/meganz/sdk/master/.clang-format")
-    set(OUTPUT_FILE ${PROJECT_SOURCE_DIR}/.clang-format)
-    file(DOWNLOAD ${FILE_URL} ${OUTPUT_FILE}
-        SHOW_PROGRESS
-        STATUS status
-    )
-
-    if(NOT status EQUAL 0)
-        message(FATAL_ERROR "Download failed with status: ${status}")
-    endif()
 endfunction()

diff --git a/src/MEGAAutoTests/UnitTests/CMakeLists.txt b/src/MEGAAutoTests/UnitTests/CMakeLists.txt
index 7051809..ae173d7 100644
--- a/src/MEGAAutoTests/UnitTests/CMakeLists.txt
+++ b/src/MEGAAutoTests/UnitTests/CMakeLists.txt
@@ -54,7 +54,7 @@ target_sources(UnitTests
 )
 
 target_include_directories(UnitTests PRIVATE ${CMAKE_CURRENT_LIST_DIR}
-    ${CMAKE_CURRENT_LIST_DIR}/google_breakpad
+	#${CMAKE_CURRENT_LIST_DIR}/google_breakpad
 )
 
 set(ExecutableTarget UnitTests)
@@ -84,7 +84,7 @@ target_link_libraries(UnitTests
     Qt5::Qml
     Qt5::Quick
     Qt5::QuickWidgets
-    MEGA::google_breakpad
+	#MEGA::google_breakpad
     )
 
 target_include_directories(UnitTests PRIVATE ../3rdparty ${MegaSyncDir})

